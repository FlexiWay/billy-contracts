/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Serializer, struct, u32, u64 } from '@metaplex-foundation/umi/serializers';


export type GlobalSettingsInput = { initialTokenSupply: bigint; initialRealSolReserves: bigint; initialRealTokenReserves: bigint; initialVirtualSolReserves: bigint; initialVirtualTokenReserves: bigint; solLaunchThreshold: bigint; feeBasisPoints: number;  };

export type GlobalSettingsInputArgs = { initialTokenSupply: number | bigint; initialRealSolReserves: number | bigint; initialRealTokenReserves: number | bigint; initialVirtualSolReserves: number | bigint; initialVirtualTokenReserves: number | bigint; solLaunchThreshold: number | bigint; feeBasisPoints: number;  };


export function getGlobalSettingsInputSerializer(): Serializer<GlobalSettingsInputArgs, GlobalSettingsInput> {
  return struct<GlobalSettingsInput>([['initialTokenSupply', u64()], ['initialRealSolReserves', u64()], ['initialRealTokenReserves', u64()], ['initialVirtualSolReserves', u64()], ['initialVirtualTokenReserves', u64()], ['solLaunchThreshold', u64()], ['feeBasisPoints', u32()]], { description: 'GlobalSettingsInput' }) as Serializer<GlobalSettingsInputArgs, GlobalSettingsInput>;
}


