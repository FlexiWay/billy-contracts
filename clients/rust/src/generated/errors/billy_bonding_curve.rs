//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! [https://github.com/metaplex-foundation/kinobi]
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum BillyBondingCurveError {
    /// 6000 (0x1770) - Invalid Global Authority
    #[error("Invalid Global Authority")]
    InvalidGlobalAuthority,
    /// 6001 (0x1771) - Invalid Withdraw Authority
    #[error("Invalid Withdraw Authority")]
    InvalidWithdrawAuthority,
    /// 6002 (0x1772) - Invalid Argument
    #[error("Invalid Argument")]
    InvalidArgument,
    /// 6003 (0x1773) - Global Already Initialized
    #[error("Global Already Initialized")]
    AlreadyInitialized,
    /// 6004 (0x1774) - Global Not Initialized
    #[error("Global Not Initialized")]
    NotInitialized,
    /// 6005 (0x1775) - Not in Running State
    #[error("Not in Running State")]
    ProgramNotRunning,
    /// 6006 (0x1776) - Bonding Curve Inactive
    #[error("Bonding Curve Inactive")]
    BondingCurveInactive,
    /// 6007 (0x1777) - Bonding Curve Not Inactive
    #[error("Bonding Curve Not Inactive")]
    BondingCurveNotInactive,
    /// 6008 (0x1778) - Bonding Curve Complete
    #[error("Bonding Curve Complete")]
    BondingCurveComplete,
    /// 6009 (0x1779) - Bonding Curve Not Complete
    #[error("Bonding Curve Not Complete")]
    BondingCurveNotComplete,
    /// 6010 (0x177A) - Bonding Curve Active
    #[error("Bonding Curve Active")]
    BondingCurveActive,
    /// 6011 (0x177B) - Bonding Curve Not Active
    #[error("Bonding Curve Not Active")]
    BondingCurveNotActive,
    /// 6012 (0x177C) - Insufficient User Tokens
    #[error("Insufficient User Tokens")]
    InsufficientUserTokens,
    /// 6013 (0x177D) - Insufficient Curve Tokens
    #[error("Insufficient Curve Tokens")]
    InsufficientCurveTokens,
    /// 6014 (0x177E) - Insufficient user SOL
    #[error("Insufficient user SOL")]
    InsufficientUserSOL,
    /// 6015 (0x177F) - Slippage Exceeded
    #[error("Slippage Exceeded")]
    SlippageExceeded,
    /// 6016 (0x1780) - Swap exactInAmount is 0
    #[error("Swap exactInAmount is 0")]
    MinSwap,
    /// 6017 (0x1781) - Buy Failed
    #[error("Buy Failed")]
    BuyFailed,
    /// 6018 (0x1782) - Sell Failed
    #[error("Sell Failed")]
    SellFailed,
    /// 6019 (0x1783) - Bonding Curve Invariant Failed
    #[error("Bonding Curve Invariant Failed")]
    BondingCurveInvariant,
    /// 6020 (0x1784) - Curve Not Started
    #[error("Curve Not Started")]
    CurveNotStarted,
    /// 6021 (0x1785) - Invalid Allocation Data supplied, basis points must add up to 10000
    #[error("Invalid Allocation Data supplied, basis points must add up to 10000")]
    InvalidAllocation,
    /// 6022 (0x1786) - Start time is in the past
    #[error("Start time is in the past")]
    InvalidStartTime,
    /// 6023 (0x1787) - SOL Launch threshold not attainable even if all tokens are sold
    #[error("SOL Launch threshold not attainable even if all tokens are sold")]
    SOLLaunchThresholdTooHigh,
    /// 6024 (0x1788) - Cannot compute max_attainable_sol
    #[error("Cannot compute max_attainable_sol")]
    NoMaxAttainableSOL,
    /// 6025 (0x1789) - Invalid Creator Authority
    #[error("Invalid Creator Authority")]
    InvalidCreatorAuthority,
    /// 6026 (0x178A) - Cliff not yet reached
    #[error("Cliff not yet reached")]
    CliffNotReached,
    /// 6027 (0x178B) - Vesting period not yet over
    #[error("Vesting period not yet over")]
    VestingPeriodNotOver,
    /// 6028 (0x178C) - Not enough fees to withdraw
    #[error("Not enough fees to withdraw")]
    NoFeesToWithdraw,
}

impl solana_program::program_error::PrintProgramError for BillyBondingCurveError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}
